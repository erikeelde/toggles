name: "Release published workflow"

on:
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: '0'

      - name: "setup secrets"
        run: |
          echo "${{ secrets.KEYSTORE_PROPERTIES }}" > keystore.properties.asc
          gpg -d --passphrase "${{ secrets.GPG_ENCRYPTION_KEY }}" --batch keystore.properties.asc > keystore.properties

          echo "${{ secrets.TOGGLES_KEYSTORE }}" > toggles_keystore.jks.asc
          gpg -d --passphrase "${{ secrets.GPG_ENCRYPTION_KEY }}" --batch toggles_keystore.jks.asc > toggles_keystore.jks

          echo "${{ secrets.SERVICE_ACCOUNT }}" > service_account.json.asc
          gpg -d --passphrase "${{ secrets.GPG_ENCRYPTION_KEY }}" --batch service_account.json.asc > service_account.json
          
          cp keystore.properties toggles-app/keystore.properties
          cp toggles_keystore.jks toggles-app/toggles_keystore.jks
          cp service_account.json toggles-app/service_account.json

      - name: "Calculate build number"
        id: version_information
        uses: ./.github/actions/version_information

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - uses: ./.github/actions/setup_android_and_java

      - name: Run Checks
        run: ./gradlew check

      - name: Publish application
        if: github.repository == 'erikeelde/toggles'
        run: ./gradlew :toggles-app:publishReleaseBundle

      - name: Build sample application
        if: github.repository == 'erikeelde/toggles'
        run: ./gradlew :toggles-sample:assembleRelease

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: Apks
          path: '**/build/outputs/*'
          retention-days: 14

      - name: Upload Release Asset
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = 'toggles-sample/build/outputs/apk/release/toggles-sample-release-unsigned.apk';
            const content_type = 'application/vnd.android.package-archive';
            const release_id = '136748606';
            
            const response = await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release_id,
              name: 'toggles-sample.apk',
              data: fs.readFileSync(path),
              headers: {
                'content-type': content_type,
                'content-length': fs.statSync(path).size
              }
            });
            
            console.log(response);
